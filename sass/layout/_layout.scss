@use "../abstract/mixins" as m;
@use "../abstract/functions" as f;

%o-gradient-frame {
  @include m.gradient-frame(
    oklch(from var(--whiteColorPalette) l c h / 0.53),
    oklch(from var(--darkColorPalette) l c h / 0.53)
  );
}

.wrapper {
  container-type: inline-size;
  container-name: game-container;
  @include m.flex(center, column);
  @include m.fluid-size(
    $height: 100dvh,
    $width-min: 50vw,
    $width-preferred: calc(20rem + 25vw),
    $width-max: 80vw
  );
  margin-inline: auto;
  padding-inline: max(1rem, 10%);

  @media (min-width: 1400px) {
    max-width: 1000px;
  }
}

.game-window {
  height: 85%;
  width: 100%;
  position: relative;
  @include m.grid(3fr 0.5fr 2fr, 1fr 3fr 1fr);
  @include m.margin-padding(0.25em, min(0.5em, 1em) min(1em, 0.25em));
  font: 400 clamp(0.25rem, 0.375rem + 1.333vw, 1.75rem) f.font("body");
  @include m.blur(6.5px);
  background: transparent no-repeat center / cover;
  overflow: hidden;

  // Konfiguracja komponentu .glow-panel dla .game-window
  // Zastępuje stare wywołanie @include m.glow-panel
  --final-drop-shadow: none;
  --panel-inset-shadow-opacity: 0.9;
  --panel-outer-shadow-color-base: var(--shadowsColorPalette);
  --panel-outer-shadow-opacity: 0.93;
  --panel-border-color-base: var(--shadowsColorPalette);
  --panel-border-opacity: 0.35;

  &:hover {
    transform: scale(1.07);
    // Nadpisanie wartości dla stanu hover
    --panel-outer-shadow-opacity: 0.73;
  }
  
  @extend %o-gradient-frame;
  transition: box-shadow 0.5s ease-in-out, transform 0.5s ease-in-out;

  @container game-container (min-width: 700px) {
    width: 45%;
  }
}
@use "../abstract/mixins" as m;

.battle-area {
  @include m.flex(space-around, row);
  position: relative;
  grid-area: 1 / 1 / 2 / -1;
  gap: 1rem;
  z-index: 11;
}

%u-base-interaction {
  @include m.blur(0.5px);
  transition: 0.5s ease-in-out;
  overflow: hidden;
  cursor: pointer;
}

.character-movement {
  @include m.fluid-size(90%, 45%);
  @include m.blur(0.5px);
  @extend %u-base-interaction;
  z-index: inherit;

  &:hover {
    @include m.glass-effect;
    transform: translate(-0.5vw, -1vh) scale(1.01);
  }

  .character-movement__icon {
    &:hover {
      animation: 350ms shake 2;
    }
  }
}

.character-movement--player {
  // Domyślna konfiguracja cieni
  --panel-border-color-base: var(--shadowsColorPalette);
  --panel-inset-shadow-color-base: var(--shadowsColorPalette);
  --panel-outer-shadow-color-base: var(--shadowsColorPalette);
  --panel-border-opacity: 0.5;
  --final-drop-shadow: none;
}

.character-movement--cpu {
  @extend .character-movement--player;
}

.game-window {
  &:hover {
    .character-movement--player, .character-movement--cpu {
      // Konfiguracja dla stanu hover z niestandardową listą cieni
      --final-drop-shadow: none;
      --panel-border-opacity: 0.42;
      
      // Bezpośrednie nadpisanie finalnego cienia, by odtworzyć złożoną listę
      --final-box-shadow: 
        inset -7px -7px 10px -5px oklch(from var(--shadowsColorPalette) l c h / 0.9),
        5px 5px 0px 0px oklch(from var(--whiteColorPalette) l c h / 0.35),
        10px 25px 15px 0px oklch(from var(--shadowsColorPalette) l c h / 0.5);
    }
  }
}
/* ---------- TYPOGRAPHY ---------- */

/* ---------- VARIABLES ----------*/
$font-frontal: "Anton", sans-serif;
$font-content: "Bebas Neue", sans-serif;
$font-subtitle: "Grey Qo", cursive;

/* ---------- MAP FUNCTIONS ---------- */

// colors //
$theme-colors: (
  "darkColorPalette": rgb(0, 0, 0),
  "whiteColorPalette": rgb(255, 255, 255),
  "winningColorPalette": rgb(255, 215, 0),
  "lossColorPalette": rgb(230, 57, 70),
  "infoColorPalette": rgb(193, 244, 0),
  "shadowsColorPalette": rgb(66, 68, 90),
);

@function theme-color($key, $opacity: 1) {
  $color: map-get($theme-colors, $key);

  @if $color {
    @return rgba($color, $opacity);
  } @else {
    @warn "Color #{$key} not found in theme-colors map.";
    @return null;
  }
}

$boxShadowPrimary: -2px -2px 13px -5px theme-color("darkColorPalette", 0.56) inset,
5px 5px 20px 5px theme-color("shadowsColorPalette"),
2px 0 10px theme-color("whiteColorPalette", 0.56);

$boxShadowSecondary: -2px -2px 13px -5px theme-color("darkColorPalette", 0.56)
    inset,
  20px 20px 38px 10px theme-color("shadowsColorPalette"),
  2px 0 30px theme-color("whiteColorPalette", 0.56);

/* ---------- GLOBAL ---------- */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  // outline: 2px solid blue;
  // background: hsl(0 100% 50% / .1)
}

/* ---------- MIXINS ---------- */

@mixin border($colorPalette) {
  border: solid $colorPalette;
  border-width: 0.5em 0.35em 0.1em 0.1em;
  border-radius: 0.75em;
}

@mixin margin-padding($margin, $padding) {
  margin: $margin;
  padding: $padding;
}

@mixin box-shadow {
  box-shadow: 20px 20px 38px 10px rgba(66, 68, 90, 1);
}

@mixin grid($gt-rows, $gt-columns) {
  display: grid;
  grid-template-rows: $gt-rows;
  grid-template-columns: $gt-columns;
}

@mixin height-width($height, $width) {
  height: $height;
  width: $width;
}

@mixin pseudoElement-before($height, $width, $top: 0, $left: 0, $radius: 0, $z-index: 0, $opacity: 0) {
  &::before {
    content: "";
    position: absolute;
    @include height-width($height, $width);
    inset: 0;
    top: $top;
    left: $left;
    border-radius: $radius;
    z-index: $z-index;
    opacity: $opacity;
  }
}

// @mixin grid($gt-rows, $gt-columns, $y-start: null, $x-start: null, $y-end: null, $x-end: null) {
//   display: grid;
//   grid-template-rows: $gt-rows;
//   grid-template-columns: $gt-columns;

//   @if $y-start != null and $y-end != null {
//     grid-row: $y-start / $y-end;
//   }

//   @if $x-start != null and $x-end != null {
//     grid-column: $x-start / $x-end;
//   }
// }

@mixin flex($justify-content, $flex-direction) {
  display: flex;
  flex-direction: $flex-direction;
  justify-content: $justify-content;
  align-items: center;
}

// @mixin border-radius($border, $radius) {
//   border: $border;
//   border-radius: $radius;
// }

@mixin position-top($position, $top) {
  position: $position;
  top: $top;
}

@mixin text-shadow($x: 5px, $y: 6px, $blur: 10px, $color: rgba(66, 68, 90, 1)) {
  text-shadow: $x $y $blur $color;
}


@mixin glass-effect($translateX) {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background: rgba(255, 255, 255, 0.20);
  transform: skewX(45deg) translateX($translateX);
  transition: 500ms;
}


/* ---------- KEYFRAMES ----------*/

@keyframes shake {
  0% {
    transform: translateY(0px);
  }

  100% {
    transform: translateY(-50px);
  }
}

@keyframes move {
  25% {
    transform: translateY(-10vmin);
    opacity: 1;
  }
  50% {
    transform: translateY(-20vmin);
  }
  75% {
    transform: translateY(-30vmin);
  }
}